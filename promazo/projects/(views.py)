from django.shortcuts import render
from .models import *

from rest_framework import serializers
#from .serializers import *

from rest_framework import generics
from rest_framework.permissions import AllowAny, IsAuthenticated
from rest_framework.response import Response
from rest_framework.views import APIView




#Getting a project list
    #Get
class listProjects(APIView):
    def __getList__(self,request):
        proj_recs = projects.objects.all()
        reurn_data=[]
        for items in proj_recs:
            return_data.append({'project':item})
        ser=ProjectsSerializer(return_data,many=True)
    def get(self,request,format=None):
        return Response(self.__getList__(request))

'''
    #POST
class modifyProject():
    permission_classes = (IsAuthenticated)
    def post(self,request,format=None):
        for items in request.data['projects']:
            proj = projects.objects.get(id=items)
            if not projects.objects.filter(project=proj,user=request.user):
                newproj = projects.objects.create(project=proj,user=request.user)
        return Response(self.__getList__(request))

#Get all role Types
class roleList():

#get one role from all the roles
class getRole():

#Create a new role
    #POST
class newProjectRole():

    #Get
class getProjectRole():

#list all the porjects
class listProjectRoles():

#Create a new project
    #POST - create new place
class newPlaces():

#Get a place with a given id
    #PATCH modify a place
    #DELETE mark the record as disabled
class modifyProjectPlace():

#Get a list of places
    #no arguments => places for a user
    #project_id => get all places for a project
    #project_role_id => give places for that id
class listPlaces():



    '''
